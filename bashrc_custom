#!/bin/bash

alias ls="ls -hF"

if [[ "$OSTYPE" == "linux-gnu" ]]; then
	alias ls="ls --color"
elif [[ "$OSTYPE" == "darwin"* ]]; then
	alias ls="ls -G"
	alias start="open -n -a"
	alias vlc="/Applications/VLC.app/Contents/MacOS/VLC"
	export CLICOLOR=1
	export LSCOLORS=GxFxCxDxBxegedabagaced
fi

alias copy="cp"
alias ll="ls -l"
alias l="ll -a"
alias vi="vim"
alias lld="ll -d */"
alias lessn="less -N"
alias lessf="less +F"
alias svnst="svn status"
alias svnadd="svn status | grep --color=never \"?\" | cut -d \"?\" -f 2 | sed \"s/^ *//;s/ *$//\" | sed \"s/^/\\\"/;s/$/\\\"/\" | xargs -L1 svn add"
alias svndel="svn status | grep --color=never \"!\" | cut -d \"!\" -f 2 | sed \"s/^ *//;s/ *$//\" | sed \"s/^/\\\"/;s/$/\\\"/\" | xargs -L1 svn del"

# VLC in console mode
alias cvlc="vlc --intf ncurses --no-color"

export SVN_EDITOR=/usr/bin/vim
alias grep="grep --color=always"

######################################################################

function brew_pkg_tree_img()
{
	brew install graphviz
	brew graph --installed | dot -T png -o graph.png
	open graph.png
}

#https://gist.github.com/mathiasbynens/674099
function appify()
{
	APPNAME=${2:-$(basename "$1" ".sh")}
	DIR="$APPNAME.app/Contents/MacOS"

	if [ -a "$APPNAME.app" ]; then
		echo "$PWD/$APPNAME.app already exists :("
		exit 1
	fi

	mkdir -p "$DIR"
	cp "$1" "$DIR/$APPNAME"
	chmod +x "$DIR/$APPNAME"

	echo "$PWD/$APPNAME.app"
}

###################################

function edit_hosts() { sudo vi /private/etc/hosts; }

###################################

function _brew_cmd_pkg()
{
	cmd=$1
	bin=$2
	pkg=$3

	echo "Checking ${bin} (${pkg}) is installed using \"${cmd}\" ..."

	if [ ! -x "$(which ${bin})" ]; then
		${cmd} "${pkg}"
	fi
}

###################################

function brew_check_install()		{ _brew_cmd_pkg "brew install "      $1 $2; }
function brew_check_install_cask()	{ _brew_cmd_pkg "brew cask install " $1 $2; }

###################################

function python_module_check()
{
	module=$1

	echo "Checking python module \"${module}\" ..."

	python3 -c "import ${module}"
	res=$?

	if [ ${res} != 0 ]; then
		pip3 install ${module}
	fi
}

###################################

function get_sed()
{
	local SED=sed
	if [ "$(uname)" == "Darwin" ]; then
		local SED="g${SED}"
	fi

	echo ${SED}
}

###################################

function on_remote()
{
	# don't do anything, need to research more regarging ssh agents etc.
	return 1

#	SSH_AUTH_SOCK=$(ls /tmp/*launchd*/Listeners)
	EXEC_SA="ssh-agent -sssss"

	echo "Currenty active ssh-agents:"
	ps auxww | grep ${EXEC_SA} | grep -v grep | sort

	echo "Killing older ones ..."
	ps -x -o pid,command | grep --color=never ${EXEC_SA} | grep -v grep | cut -d' ' -f 1 | xargs kill -KILL

	eval `${EXEC_SA}`
	ssh-add -K

	echo "Done, new one started, agents running:"
	ps auxww | grep ${EXEC_SA} | grep -v grep | sort
}

######################################################################

if [[ "$OSTYPE" == "linux-gnu" ]]; then
	test -s ~/.alias && . ~/.alias || true

	case $TERM in
		xterm*|rxvt*)
			TITLEBAR='\[\033]0;\u@\h:\w\007\]'
			;;
		*)
			TITLEBAR=""
			;;
	esac;
#else
#	#remote connection
#	if [ ! -z "${SSH_CLIENT}" ]; then
#		echo "Welcome, stranger"
#		on_remote
#	fi
fi

######################################################################

#  Prompt generated by Giles's Prompt-o-matic, 20081201
#  http://www.gilesorr.com/bashprompt/jsb/prompt.html

PS1="${TITLEBAR}\[\033[0m\]\[\033[1;32m\]\[\033[0m\]\[\033[0;37m\]\[\033[0m\]\[\033[0;37m\]\[\033[0m\]\[\033[1;30m\][\[\033[0m\]\[\033[0;37m\]\[\033[0m\]\[\033[0;37m\][\t]\[\033[0m\]\[\033[1;30m\]]\[\033[1;33m\]\u\[\033[0m\]\[\033[1;31m\]@\[\033[0m\]\[\033[1;34m\]\[\033[0m\]\[\033[0;32m\]\[\033[0m\]\[\033[1;32m\]\h \[\033[0m\]\[\033[0;32m\](\$(ppd=\"\${PWD}\"; let keep=4; let i=0; while [ \"\${ppd}\" != \"\" ]; do ppd=\"\${ppd%/*}\" ; let i=\$i+1; done; if [ \${keep} -ge \${i} ]; then echo \${PWD}; else newPWD=\"\${PWD}\"; while [ \${i} -ge \${keep} ]; do newPWD=\"\${newPWD#*/}\"; let i=\$i-1; done; echo \"<\${newPWD}\"; fi)) \[\033[0m\]\[\033[1;36m\]\[\033[0m\]\[\033[1;37m\]\[\033[1;37m\]\[\033[47m\]\[\033[0;30m\]\[\033[47m\]\[\033[1;33m\]\[\033[44m\]\[\033[1;33m\]\[\033[40m\]\[\033[1;34m\]\[\033[42m\]\[\033[1;36m\]\[\033[40m\]\[\033[1;33m\]\[\033[40m\]:\[\033[1;36m\]\[\033[40m\]:\[\033[0;0m\] "
